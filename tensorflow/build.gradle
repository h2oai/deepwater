group 'deepwater.backends.tensorflow'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven'

repositories {
    mavenCentral()
}

sourceSets.main.resources {
    srcDirs = ["src/main/resources"]
}

dependencies {
    compile files('../thirdparty/javacpp-presets/target/javacpp.jar')
    compile files('../thirdparty/javacpp-presets/tensorflow/target/tensorflow.jar')
    if (new File('../thirdparty/javacpp-presets/tensorflow/target/tensorflow-linux-x86_64.jar').exists())
      compile files('../thirdparty/javacpp-presets/tensorflow/target/tensorflow-linux-x86_64.jar')
    else if (new File('../thirdparty/javacpp-presets/tensorflow/target/tensorflow-macosx-x86_64.jar').exists())
      compile files('../thirdparty/javacpp-presets/tensorflow/target/tensorflow-macosx-x86_64.jar')
    compile project (':deepwater-backend-api')
    compile "com.google.protobuf:protobuf-java:3.0.0"
    compile 'com.google.guava:guava:19.0'
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

//jar {
    // baseName = 'analytics'
    // from('src/main/java') {
        // include 'config/**/*.xml'
        //}
    //
    // manifest {
        // attributes 'Implementation-Title': 'Analytics Library', 'Implementation-Version': version
        //}
    //}
jar {
    baseName = rootProject.name + "." + project.name

    // include also the sources for easy debugging
    from sourceSets.main.allSource

    // copy all the other dependencies as a single JAR
    from configurations.compile.collect {it.isDirectory() ? it: zipTree(it)}
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
